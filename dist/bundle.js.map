{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;ACAO;AACP;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B,WAAW,UAAU;AACrB;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA,aAAa,UAAU;AACvB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxBmD;AACc;;AAEjE;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC;;AAErC,EAAE,gEAAY;;AAEd;AACA;AACA,IAAI,8EAAmB;AACvB,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,iBAAiB;;AAExE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnHoD;AACpD,YAAY,gBAAgB;AAC5B;;AAEiE;;AAEjE;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sCAAsC;AACtC,EAAE,iEAAoB;AACtB;;AAEA;AACA;AACA,IAAI,8EAAmB;AACvB,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wDAAwD,iBAAiB;;AAEzE,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/HA,YAAY,kBAAkB;AACY;AACG;;AAEoB;;AAEjE;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC;AACjC;AACA,EAAE,uDAAQ,CAAC,6CAAS;;AAEpB;AACA;AACA,IAAI,8EAAmB;AACvB,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,2CAA2C;AAC7D;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChHiE;;AAEjE;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,uBAAuB,EAAE;;AAEzB;AACA;AACA,wCAAwC,EAAE;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;AACA;;AAEA,QAAQ,8EAAmB;;AAE3B;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;ACjGiE;;AAE1D;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,8EAAmB;AACvB,GAAG;AACH;;;;;;;;;;;;;;;;;;;AC/C+D;AACW;AACF;AACP;;AAEjE;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,iCAAiC,MAAM;AACvC;AACA,+BAA+B,MAAM;;AAErC;AACA;AACA,sCAAsC,MAAM;AAC5C,2BAA2B,MAAM;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA,oBAAoB,6BAA6B;AACjD;AACA;;AAEA;AACA,UAAU,qFAAsB;AAChC;;AAEA;AACA,UAAU,uFAAuB;AACjC;;AAEA;AACA,UAAU,4EAAkB;AAC5B;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,IAAI,8EAAmB;AACvB,GAAG;AACH;;;;;;;;;;;;;;;;ACnIiE;;AAE1D;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,8EAAmB;AACvB,GAAG;AACH;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;;AAEO;AACP;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEO;AACP;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEO;AACP;;AAEA,kBAAkB,iBAAiB;AACnC;AACA,wDAAwD;AACxD;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpC0C;AACW;AACrD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA,MAAM,uDAAQ;AACd;AACA;AACA;;AAEO;AACP;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA,MAAM,kEAAa;AACnB;AACA;AACA;;;;;;;;;;;;;;;;;ACnD+C;AACc;;AAE7D;AACA;AACA;;AAEO;AACP;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA,oCAAoC,kCAAkC;AACtE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,wDAAa;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uBAAuB,sEAAiB;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;ACvDgD;AACa;;AAE7D;AACA;AACA;;AAEO;AACP;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA,mDAAmD,sCAAsC,SAAS,uCAAuC;AACzI;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,yDAAc;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uBAAuB,sEAAiB;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;ACxDkD;AACP;AACkB;AACE;;AAE/D;AACA;AACA;;AAEO;AACP;;AAEA,kBAAkB,iBAAiB;AACnC;AACA,0BAA0B,+DAAY;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB;AACxB,2BAA2B;AAC3B;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,iBAAiB,wEAAkB;AACnC;;AAEA,eAAe,oDAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB,sEAAiB;AAClC;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtE0D;AACZ;AACC;AACI;;AAEnD;AACA;AACA;;AAEO;AACP;AACA,uBAAuB,4DAAO;AAC9B;;AAEA,mCAAmC,4DAAO,CAAC,8DAAS;;AAEpD;;AAEA,qCAAqC,uDAAY,qBAAqB;;AAEtE,gCAAgC,wDAAa,+BAA+B;;AAE5E,EAAE,gEAAY;AACd;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC,kCAAkC,kCAAkC;AACpE;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrC0D;AACZ;AACE;AACK;;AAErD;AACA;AACA;;AAEO;AACP,uBAAuB,4DAAO;AAC9B;;AAEA,mCAAmC,4DAAO,CAAC,8DAAS;;AAEpD;;AAEA,qCAAqC,uDAAY,qBAAqB;;AAEtE;AACA,IAAI,yDAAc;AAClB;AACA;AACA,KAAK;;AAEL,EAAE,kEAAa;AACf;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA,sDAAsD,YAAY,SAAS,aAAa;AACxF;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACzC0D;AACZ;AACH;AACD;AACQ;;AAElD;AACA;AACA;;AAEO;AACP,uBAAuB,4DAAO;AAC9B;;AAEA,mCAAmC,4DAAO,CAAC,8DAAS;;AAEpD;;AAEA,qCAAqC,uDAAY,qBAAqB;;AAEtE;AACA,IAAI,oDAAS;AACb;AACA;AACA,KAAK;;AAEL,EAAE,uDAAQ;AACV;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC,wBAAwB,+DAAY;AACpC;AACA;AACA;;;;;;;;;;;;;;;ACxCA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClCA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEO;AACP,iCAAiC,OAAO;AACxC,iDAAiD;;AAEjD;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;UCpBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNsB;;AAE2C;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,8EAAmB;AACrB,CAAC","sources":["webpack://memory-game/./src/style.css?e320","webpack://memory-game/./src/js/card-template.js","webpack://memory-game/./src/js/generate-game-screen-baby.js","webpack://memory-game/./src/js/generate-game-screen-child.js","webpack://memory-game/./src/js/generate-game-screen.js","webpack://memory-game/./src/js/generate-hello-screen.js","webpack://memory-game/./src/js/generate-lose-screen.js","webpack://memory-game/./src/js/generate-start-screen.js","webpack://memory-game/./src/js/generate-win-screen.js","webpack://memory-game/./src/js/hide-card.js","webpack://memory-game/./src/js/request.js","webpack://memory-game/./src/js/show-card-baby.js","webpack://memory-game/./src/js/show-card-child.js","webpack://memory-game/./src/js/show-card.js","webpack://memory-game/./src/js/show-data-baby.js","webpack://memory-game/./src/js/show-data-child.js","webpack://memory-game/./src/js/show-data.js","webpack://memory-game/./src/js/stopwatch.js","webpack://memory-game/./src/js/utils/arr-utils.js","webpack://memory-game/webpack/bootstrap","webpack://memory-game/webpack/runtime/define property getters","webpack://memory-game/webpack/runtime/hasOwnProperty shorthand","webpack://memory-game/webpack/runtime/make namespace object","webpack://memory-game/./src/js/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","export function cardTemplate(data) {\n  return `<div class=\"card__content\">\n  <div class=\"card__info card__info_top\">\n    <div class=\"card__text\">${data.text}</div>\n    <img\n      class=\"card__suit\"\n      src=\"${data.suit}\"\n      alt=\"${data.name}\"\n    />\n  </div>\n  <div class=\"card__center\">\n    <img src=\"${data.suit}\"\n    alt=\"${data.name}\" />\n  </div>\n  <div class=\"card__info card__info_bottom\">\n    <div class=\"card__text\">${data.text}</div>\n    <img\n      class=\"card__suit\"\n      src=\"${data.suit}\"\n      alt=\"${data.name} \"\n    />\n  </div>\n  </div>\n  </div>`;\n}\n","import { showDataBaby } from './show-data-baby.js';\nimport { generateStartScreen } from './generate-start-screen.js';\n\n/**\n * Генерация экрана игры для малышей\n */\n\nexport function generateGameScreenBaby(container) {\n  window.app.userTimeSekMin = [0, 0];\n  window.app.guessedPairs = [];\n  window.app.userCards = [];\n  window.app.userTargets = [];\n  window.app.attempts = 0;\n\n  clearTimeout(window.app.delay);\n  clearInterval(window.app.stopwatch);\n\n  container.innerHTML = '';\n  const header = document.createElement('div');\n  header.classList.add('header');\n\n  const timer = document.createElement('div');\n  timer.classList.add('timer');\n\n  const minText = document.createElement('p');\n  minText.classList.add('timer__text');\n  minText.textContent = 'min';\n\n  const sekText = document.createElement('p');\n  sekText.classList.add('timer__text', 'timer__text_sek');\n  sekText.textContent = 'sek';\n\n  const min = document.createElement('p');\n  min.classList.add('timer__count', 'timer__count_min');\n  min.textContent = '00';\n\n  const dot = document.createElement('p');\n  dot.classList.add('timer__count');\n  dot.textContent = '.';\n\n  const sek = document.createElement('p');\n  sek.classList.add('timer__count', 'timer__count_sek');\n  sek.textContent = '00';\n\n  const attempts = document.createElement('div');\n  attempts.classList.add('attempts');\n\n  const attempt1 = document.createElement('div');\n  attempt1.classList.add('attempt');\n  const attempt2 = document.createElement('div');\n  attempt2.classList.add('attempt');\n  const attempt3 = document.createElement('div');\n  attempt3.classList.add('attempt');\n\n  const buttonRepeat = document.createElement('button');\n  buttonRepeat.classList.add('button');\n  buttonRepeat.textContent = 'Начать заново';\n\n  const cardsContainer = document.createElement('div');\n  cardsContainer.classList.add('cards-container-baby');\n\n  container.appendChild(header);\n  header.appendChild(timer);\n  timer.appendChild(minText);\n  timer.appendChild(sekText);\n  timer.appendChild(min);\n  timer.appendChild(dot);\n  timer.appendChild(sek);\n\n  header.appendChild(buttonRepeat);\n  container.appendChild(cardsContainer);\n\n  generateCardsBaby(cardsContainer); // Вывод картинок на экран\n\n  showDataBaby();\n\n  buttonRepeat.addEventListener('click', () => {\n    container.innerHTML = '';\n    generateStartScreen(container);\n  });\n}\n\n/**\n * Генерация и вывод картинок на экран\n */\n\nfunction generateCardsBaby(container) {\n  const cardsContainer = document.querySelector('.cards-container-baby');\n  cardsContainer.classList.add(`cards-container-baby_${window.app.level}`);\n\n  const numberOfCardsInRow = Number(window.app.level) + 1;\n  const numberOfCardsInColumn = 2;\n  const numberOfCards = numberOfCardsInRow * numberOfCardsInColumn;\n\n  const cardWidth = 150;\n  const gap = 15;\n\n  if (window.app.level === '1') {\n    const timer = document.querySelector('.timer');\n    timer.style.marginRight = '70px';\n  }\n\n  for (let i = 0; i < numberOfCards; i++) {\n    const card = document.createElement('div');\n    card.classList.add('card', 'card_baby');\n    card.style.background = '#dddddd';\n    container.appendChild(card);\n  }\n\n  container.style.width =\n    numberOfCardsInRow * cardWidth + (numberOfCardsInRow - 1) * gap + 'px';\n  container.style.height =\n    numberOfCardsInColumn * cardWidth +\n    (numberOfCardsInColumn - 1) * gap +\n    'px';\n}\n","import { requestFunctionChild } from './request.js';\n// import { showDataChild } from './show-data-child.js';\n// import cardsDataChild from './../data/cards-child.json';\n\nimport { generateStartScreen } from './generate-start-screen.js';\n\n/**\n * Генерация экрана детской игры\n */\n\nexport function generateGameScreenChild(container) {\n  window.app.userTimeSekMin = [0, 0];\n  window.app.guessedPairs = [];\n  window.app.userCards = [];\n  window.app.userTargets = [];\n  window.app.attempts = 0;\n\n  clearTimeout(window.app.delay);\n  clearInterval(window.app.stopwatch);\n\n  container.innerHTML = '';\n  const header = document.createElement('div');\n  header.classList.add('header');\n\n  const timer = document.createElement('div');\n  timer.classList.add('timer');\n\n  const minText = document.createElement('p');\n  minText.classList.add('timer__text');\n  minText.textContent = 'min';\n\n  const sekText = document.createElement('p');\n  sekText.classList.add('timer__text', 'timer__text_sek');\n  sekText.textContent = 'sek';\n\n  const min = document.createElement('p');\n  min.classList.add('timer__count', 'timer__count_min');\n  min.textContent = '00';\n\n  const dot = document.createElement('p');\n  dot.classList.add('timer__count');\n  dot.textContent = '.';\n\n  const sek = document.createElement('p');\n  sek.classList.add('timer__count', 'timer__count_sek');\n  sek.textContent = '00';\n\n  const attempts = document.createElement('div');\n  attempts.classList.add('attempts');\n\n  const attempt1 = document.createElement('div');\n  attempt1.classList.add('attempt');\n  const attempt2 = document.createElement('div');\n  attempt2.classList.add('attempt');\n  const attempt3 = document.createElement('div');\n  attempt3.classList.add('attempt');\n\n  const buttonRepeat = document.createElement('button');\n  buttonRepeat.classList.add('button');\n  buttonRepeat.textContent = 'Начать заново';\n\n  const cardsContainer = document.createElement('div');\n  cardsContainer.classList.add('cards-container-child');\n\n  container.appendChild(header);\n  header.appendChild(timer);\n  timer.appendChild(minText);\n  timer.appendChild(sekText);\n  timer.appendChild(min);\n  timer.appendChild(dot);\n  timer.appendChild(sek);\n\n  header.appendChild(buttonRepeat);\n  container.appendChild(cardsContainer);\n\n  generateCardsChild(cardsContainer); // Вывод картинок на экран\n  requestFunctionChild();\n  // showDataChild(cardsDataChild);\n\n  buttonRepeat.addEventListener('click', () => {\n    container.innerHTML = '';\n    generateStartScreen(container);\n  });\n}\n\n/**\n * Генерация и вывод картинок на экран\n */\n\nfunction generateCardsChild(container) {\n  const cardsContainer = document.querySelector('.cards-container-child');\n  cardsContainer.classList.add(`cards-container-child_${window.app.level}`);\n\n  for (let i = 0; i < 6 * window.app.level; i++) {\n    const card = document.createElement('div');\n    card.classList.add('card');\n    card.style.background = '#c2f5ff';\n    container.appendChild(card);\n  }\n\n  let cardWidth = 120;\n  let numberOfCardsInRow;\n  let numberOfCardsInColumn;\n  const gap = 15;\n\n  if (window.app.level === '1') {\n    cardWidth = 150;\n    numberOfCardsInRow = 3;\n    numberOfCardsInColumn = 2;\n  }\n\n  if (window.app.level === '2') {\n    numberOfCardsInRow = 4;\n    numberOfCardsInColumn = 3;\n  }\n\n  if (window.app.level === '3') {\n    numberOfCardsInRow = 6;\n    numberOfCardsInColumn = 3;\n  }\n\n  container.style.width =\n    numberOfCardsInRow * cardWidth + (numberOfCardsInRow - 1) * gap + 'px';\n  container.style.height =\n    numberOfCardsInColumn * cardWidth +\n    (numberOfCardsInColumn - 1) * gap +\n    'px';\n}\n","// import { requestFunction } from './request.js';\nimport { showData } from './show-data.js';\nimport cardsData from './../data/cards.json';\n\nimport { generateStartScreen } from './generate-start-screen.js';\n\n/**\n * Генерация экрана игры\n */\n\nexport function generateGameScreen(container) {\n  window.app.userTimeSekMin = [0, 0];\n  window.app.guessedPairs = [];\n  window.app.userCards = [];\n  window.app.userTargets = [];\n  window.app.attempts = 0;\n\n  clearTimeout(window.app.delay);\n  clearInterval(window.app.stopwatch);\n\n  container.innerHTML = '';\n  const header = document.createElement('div');\n  header.classList.add('header');\n\n  const timer = document.createElement('div');\n  timer.classList.add('timer');\n\n  const minText = document.createElement('p');\n  minText.classList.add('timer__text');\n  minText.textContent = 'min';\n\n  const sekText = document.createElement('p');\n  sekText.classList.add('timer__text', 'timer__text_sek');\n  sekText.textContent = 'sek';\n\n  const min = document.createElement('p');\n  min.classList.add('timer__count', 'timer__count_min');\n  min.textContent = '00';\n\n  const dot = document.createElement('p');\n  dot.classList.add('timer__count');\n  dot.textContent = '.';\n\n  const sek = document.createElement('p');\n  sek.classList.add('timer__count', 'timer__count_sek');\n  sek.textContent = '00';\n\n  const attempts = document.createElement('div');\n  attempts.classList.add('attempts');\n\n  const attempt1 = document.createElement('div');\n  attempt1.classList.add('attempt');\n  const attempt2 = document.createElement('div');\n  attempt2.classList.add('attempt');\n  const attempt3 = document.createElement('div');\n  attempt3.classList.add('attempt');\n\n  const buttonRepeat = document.createElement('button');\n  buttonRepeat.classList.add('button');\n  buttonRepeat.textContent = 'Начать заново';\n\n  const cardsContainer = document.createElement('div');\n  cardsContainer.classList.add('cards-container');\n\n  container.appendChild(header);\n  header.appendChild(timer);\n  timer.appendChild(minText);\n  timer.appendChild(sekText);\n  timer.appendChild(min);\n  timer.appendChild(dot);\n  timer.appendChild(sek);\n\n  header.appendChild(attempts);\n  attempts.appendChild(attempt1);\n  attempts.appendChild(attempt2);\n  attempts.appendChild(attempt3);\n\n  header.appendChild(buttonRepeat);\n  container.appendChild(cardsContainer);\n\n  generateCards(cardsContainer); // Вывод карт на экран\n  // requestFunction();\n  showData(cardsData);\n\n  buttonRepeat.addEventListener('click', () => {\n    container.innerHTML = '';\n    generateStartScreen(container);\n  });\n}\n\n/**\n * Генерация и вывод карт на экран\n */\n\nfunction generateCards(container) {\n  const cardWidth = 95;\n  const cardHeight = 133;\n  const gap = 15;\n  const numberOfCardsInRow = 6;\n\n  container.style.width =\n    numberOfCardsInRow * cardWidth + (numberOfCardsInRow - 1) * gap + 'px';\n  container.style.height =\n    window.app.level * cardHeight + (window.app.level - 1) * gap + 'px';\n\n  for (let i = 0; i < numberOfCardsInRow * window.app.level; i++) {\n    const card = document.createElement('div');\n\n    card.classList.add('card');\n    card.style.background = '#c2f5ff';\n    container.appendChild(card);\n  }\n}\n","import { generateStartScreen } from './generate-start-screen.js';\n\n/**\n * Генерация приветственного экрана\n */\n\nexport function generateHelloScreen(container) {\n  window.app.userTimeSekMin = [0, 0];\n  window.app.guessedPairs = [];\n  window.app.userCards = [];\n  window.app.userTargets = [];\n  window.app.attempts = 0;\n\n  clearTimeout(window.app.delay);\n  clearInterval(window.app.stopwatch);\n\n  container.innerHTML = '';\n\n  const formHello = document.createElement('form');\n  formHello.classList.add('form', 'form__hello');\n\n  const h2Title = document.createElement('h2');\n  h2Title.classList.add('h2-title');\n  h2Title.textContent = 'Ваш возраст?';\n\n  const age = document.createElement('div');\n  age.classList.add('age');\n\n  container.appendChild(formHello);\n  formHello.appendChild(h2Title);\n  formHello.appendChild(age);\n\n  for (let i = 0; i < 3; i++) {\n    const userAge = document.createElement('input');\n    userAge.classList.add('user__age', 'radio');\n    userAge.type = 'radio';\n    userAge.id = `userAge${i}`;\n    userAge.name = 'userAge';\n    userAge.value = `${i}`;\n\n    const label = document.createElement('label');\n    label.classList.add('user__age_label', 'label');\n    label.setAttribute('for', `userAge${i}`);\n\n    age.appendChild(userAge);\n    age.appendChild(label);\n  }\n\n  const labels = document.querySelectorAll('.user__age_label');\n  labels[0].innerHTML = '0+';\n  labels[1].textContent = '3+';\n  labels[2].textContent = '7+';\n\n  const buttonStart = document.createElement('button');\n  buttonStart.classList.add('age__button', 'button');\n  buttonStart.textContent = 'Играть';\n\n  formHello.appendChild(buttonStart);\n\n  const userAges = document.querySelectorAll('.user__age');\n  const difficultyLevelLabels = document.querySelectorAll('.user__age_label');\n\n  /**\n   * Смена цвета выбранного уровня сложности\n   */\n\n  userAges.forEach((userAge) => {\n    userAge.addEventListener('click', () => {\n      buttonStart.textContent = 'Играть';\n      buttonStart.style.background = '#7ac100';\n\n      difficultyLevelLabels.forEach((label) => {\n        label.style.background = '#ffffff';\n        label.style.color = '#0080c1';\n      });\n\n      difficultyLevelLabels[Number(userAge.value)].style.background = '#0080c1';\n      difficultyLevelLabels[Number(userAge.value)].style.color = '#ffffff';\n    });\n  });\n\n  formHello.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    for (let i = 0; i < userAges.length; i++) {\n      if (userAges[i].checked) {\n        window.app.age = userAges[i].value;\n\n        generateStartScreen(container);\n\n        break;\n      } else {\n        buttonStart.textContent = 'Вы не выбрали возраст!';\n        buttonStart.style.background = '#c14a00';\n      }\n    }\n  });\n}\n","import { generateStartScreen } from './generate-start-screen.js';\n\nexport function generateLoseScreen() {\n  const shadow = document.createElement('div');\n  shadow.classList.add('shadow');\n\n  const formLose = document.createElement('form');\n  formLose.classList.add('form', 'form__lose');\n\n  const imgLose = document.createElement('img');\n  imgLose.classList.add('img-lose');\n  imgLose.src = 'img/lose.png';\n\n  const h2Title = document.createElement('h2');\n  h2Title.classList.add('h2-title');\n  h2Title.textContent = 'Вы проиграли!';\n\n  const text = document.createElement('p');\n  text.classList.add('final-text');\n  text.textContent = 'Затраченное время:';\n\n  const min = document.querySelector('.timer__count_min');\n  const sek = document.querySelector('.timer__count_sek');\n\n  const time = document.createElement('p');\n  time.classList.add('final-time');\n  time.textContent = min.textContent + '.' + sek.textContent;\n\n  const buttonRepeat = document.createElement('button');\n  buttonRepeat.classList.add('button');\n  buttonRepeat.textContent = 'Играть снова';\n\n  const screenContainer = document.querySelector('.screen-container');\n  screenContainer.appendChild(shadow);\n  screenContainer.appendChild(formLose);\n  formLose.appendChild(imgLose);\n  formLose.appendChild(h2Title);\n  formLose.appendChild(text);\n  formLose.appendChild(time);\n  formLose.appendChild(buttonRepeat);\n\n  formLose.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    screenContainer.innerHTML = '';\n    generateStartScreen(screenContainer);\n  });\n}\n","import { generateGameScreen } from './generate-game-screen.js';\nimport { generateGameScreenChild } from './generate-game-screen-child.js';\nimport { generateGameScreenBaby } from './generate-game-screen-baby.js';\nimport { generateHelloScreen } from './generate-hello-screen.js';\n\n/**\n * Генерация начального экрана\n */\n\nexport function generateStartScreen(container) {\n  window.app.userTimeSekMin = [0, 0];\n  window.app.guessedPairs = [];\n  window.app.userCards = [];\n  window.app.userTargets = [];\n  window.app.attempts = 0;\n\n  clearTimeout(window.app.delay);\n  clearInterval(window.app.stopwatch);\n\n  container.innerHTML = '';\n\n  const formStart = document.createElement('form');\n  formStart.classList.add('form', 'form__start');\n\n  const h2Title = document.createElement('h2');\n  h2Title.classList.add('h2-title');\n  h2Title.textContent = 'Выберите сложность';\n\n  const difficulty = document.createElement('div');\n  difficulty.classList.add('difficulty');\n\n  container.appendChild(formStart);\n  formStart.appendChild(h2Title);\n  formStart.appendChild(difficulty);\n\n  for (let i = 0; i < 3; i++) {\n    const difficultyLevel = document.createElement('input');\n    difficultyLevel.classList.add('difficulty__level', 'radio');\n    difficultyLevel.type = 'radio';\n    difficultyLevel.id = `level${i + 1}`;\n    difficultyLevel.name = 'difficulty';\n    difficultyLevel.value = `${i + 1}`;\n\n    const label = document.createElement('label');\n    label.classList.add('difficulty__level_label', 'label');\n    label.setAttribute('for', `level${i + 1}`);\n    label.textContent = `${i + 1}`;\n\n    difficulty.appendChild(difficultyLevel);\n    difficulty.appendChild(label);\n  }\n\n  const buttonsContainer = document.createElement('div');\n  buttonsContainer.classList.add('buttons-container');\n  formStart.appendChild(buttonsContainer);\n\n  const buttonStart = document.createElement('button');\n  buttonStart.classList.add('difficulty__button', 'button');\n  buttonStart.type = 'submit';\n  buttonStart.textContent = 'Старт';\n\n  buttonsContainer.appendChild(buttonStart);\n\n  const buttonChangeAge = document.createElement('button');\n  buttonChangeAge.classList.add(\n    'difficulty__button',\n    'difficulty__button_change-age',\n    'button'\n  );\n  buttonChangeAge.type = 'button';\n  buttonChangeAge.textContent = 'На главную';\n\n  buttonsContainer.appendChild(buttonChangeAge);\n\n  const difficultyLevels = document.querySelectorAll('.difficulty__level');\n  const difficultyLevelLabels = document.querySelectorAll(\n    '.difficulty__level_label'\n  );\n\n  /**\n   * Смена цвета выбранного уровня сложности\n   */\n\n  difficultyLevels.forEach((difficultyLevel) => {\n    difficultyLevel.addEventListener('click', () => {\n      buttonStart.textContent = 'Старт';\n      buttonStart.style.background = '#7ac100';\n\n      difficultyLevelLabels.forEach((label) => {\n        label.style.background = '#ffffff';\n        label.style.color = '#0080c1';\n      });\n\n      difficultyLevelLabels[\n        Number(difficultyLevel.value) - 1\n      ].style.background = '#0080c1';\n      difficultyLevelLabels[Number(difficultyLevel.value) - 1].style.color =\n        '#ffffff';\n    });\n  });\n\n  formStart.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    for (let i = 0; i < difficultyLevels.length; i++) {\n      if (difficultyLevels[i].checked) {\n        window.app.level = difficultyLevels[i].value;\n\n        if (Number(window.app.age) === 0) {\n          generateGameScreenBaby(container);\n        }\n\n        if (Number(window.app.age) === 1) {\n          generateGameScreenChild(container);\n        }\n\n        if (Number(window.app.age) === 2) {\n          generateGameScreen(container);\n        }\n\n        break;\n      } else {\n        buttonStart.textContent = 'Выберите уровень!';\n        buttonStart.style.background = '#c14a00';\n      }\n    }\n  });\n\n  buttonChangeAge.addEventListener('click', () => {\n    generateHelloScreen(container);\n  });\n}\n","import { generateStartScreen } from './generate-start-screen.js';\n\nexport function generateWinScreen() {\n  const shadow = document.createElement('div');\n  shadow.classList.add('shadow');\n\n  const formWin = document.createElement('form');\n  formWin.classList.add('form', 'form__win');\n\n  const imgWin = document.createElement('img');\n  imgWin.classList.add('img-win');\n  imgWin.src = 'img/win.png';\n\n  const h2Title = document.createElement('h2');\n  h2Title.classList.add('h2-title');\n  h2Title.textContent = 'Вы выиграли!';\n\n  const text = document.createElement('p');\n  text.classList.add('final-text');\n  text.textContent = 'Затраченное время:';\n\n  const min = document.querySelector('.timer__count_min');\n  const sek = document.querySelector('.timer__count_sek');\n\n  const time = document.createElement('p');\n  time.classList.add('final-time');\n  time.textContent = min.textContent + '.' + sek.textContent;\n\n  const buttonRepeat = document.createElement('button');\n  buttonRepeat.classList.add('button');\n  buttonRepeat.textContent = 'Играть снова';\n\n  const screenContainer = document.querySelector('.screen-container');\n  screenContainer.appendChild(shadow);\n  screenContainer.appendChild(formWin);\n  formWin.appendChild(imgWin);\n  formWin.appendChild(h2Title);\n  formWin.appendChild(text);\n  formWin.appendChild(time);\n  formWin.appendChild(buttonRepeat);\n\n  formWin.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    screenContainer.innerHTML = '';\n    generateStartScreen(screenContainer);\n  });\n}\n","/**\n * Переворачиваем карты рубашкой вверх\n */\n\nexport function hideCards() {\n  let imgs = document.querySelectorAll('.card');\n\n  for (let i = 0; i < imgs.length; i++) {\n    imgs[i].innerHTML = '<img src=\"img/back.png\" alt=\"Card back\" />';\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\n    imgs[i].setAttribute('style', 'pointer-events: auto;');\n    imgs[i].style.cursor = 'pointer';\n  }\n}\n\nexport function hideCardsChild() {\n  let imgs = document.querySelectorAll('.card');\n\n  for (let i = 0; i < imgs.length; i++) {\n    imgs[i].innerHTML =\n      '<img class=\"img-child\" src=\"img/back.png\" alt=\"Card back\" />';\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\n    imgs[i].setAttribute('style', 'pointer-events: auto;');\n    imgs[i].style.cursor = 'pointer';\n  }\n}\n\nexport function hideCardsBaby() {\n  let imgs = document.querySelectorAll('.card');\n\n  for (let i = 0; i < imgs.length; i++) {\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\n    imgs[i].setAttribute('style', 'pointer-events: auto;');\n    imgs[i].style.cursor = 'pointer';\n    imgs[i].style.background = '#c8e7ff';\n  }\n}\n","import { showData } from './show-data.js';\nimport { showDataChild } from './show-data-child.js';\n// import cardsData from './../data/cards.json';\n// import cardsDataChild from './../data/cards-child.json';\n\n/***\n * Запрос данных из файла *.json и вывод их на текущую страницу в карты\n */\n\n// export function requestFunction() {\n//   showData(cardsData);\n// }\n\n// export function requestFunctionChild() {\n//   showDataChild(cardsDataChild);\n// }\n\nexport function requestFunction() {\n  const request = new XMLHttpRequest();\n\n  request.open('GET', 'data/cards.json');\n\n  request.send();\n\n  request.onload = function () {\n    if (request.status !== 200) {\n      console.error('Не удалось получить данные!');\n    } else {\n      const data = JSON.parse(request.response);\n\n      showData(data);\n    }\n  };\n}\n\nexport function requestFunctionChild() {\n  const request = new XMLHttpRequest();\n\n  request.open('GET', 'data/cards-child.json');\n\n  request.send();\n\n  request.onload = function () {\n    if (request.status !== 200) {\n      console.error('Не удалось получить данные!');\n    } else {\n      const data = JSON.parse(request.response);\n\n      showDataChild(data);\n    }\n  };\n}\n","import { hideCardsBaby } from './hide-card.js';\nimport { generateWinScreen } from './generate-win-screen.js';\n\n/**\n * Открываем карту по клику\n */\n\nexport function showCardBaby() {\n  const imgs = document.querySelectorAll('.card');\n\n  for (let i = 0; i < imgs.length; i++) {\n    imgs[i].addEventListener('click', () => {\n      imgs[i].style.transform = 'rotateY(180deg) scale(-1, 1)';\n      imgs[i].style.background = `${window.app.cardsForCurrentGame[i]}`;\n      imgs[i].style.border = '10px solid #ffffff';\n\n      // добавляем пару выбранных карт в window.app.userCards\n      if (!window.app.userCards[0] && !window.app.userTargets.includes(i)) {\n        window.app.userCards[0] = window.app.cardsForCurrentGame[i];\n        window.app.userTargets.push(i);\n      }\n\n      if (window.app.userCards[0] && !window.app.userTargets.includes(i)) {\n        window.app.userCards[1] = window.app.cardsForCurrentGame[i];\n        window.app.userTargets.push(i);\n\n        //если карты не совпадают, обнуляем все результаты\n        if (window.app.userCards[0] !== window.app.userCards[1]) {\n          window.app.userCards = [];\n          window.app.userTargets = [];\n          window.app.guessedPairs = [];\n\n          setTimeout(hideCardsBaby, window.app.commonDelay);\n        }\n\n        //если карты совпадают, добавляем в список угаданных пар\n        if (\n          window.app.userCards.length > 0 &&\n          window.app.userCards[0] === window.app.userCards[1]\n        ) {\n          if (!window.app.guessedPairs.includes(window.app.userCards[0])) {\n            window.app.guessedPairs.push(window.app.userCards[0]);\n          }\n\n          window.app.userCards = [];\n\n          if (window.app.guessedPairs.length === Number(window.app.level) + 1) {\n            clearInterval(window.app.stopwatch);\n\n            setTimeout(generateWinScreen, window.app.commonDelay);\n          }\n        }\n      }\n    });\n  }\n}\n","import { hideCardsChild } from './hide-card.js';\nimport { generateWinScreen } from './generate-win-screen.js';\n\n/**\n * Открываем карту по клику\n */\n\nexport function showCardChild() {\n  const imgs = document.querySelectorAll('.card');\n\n  for (let i = 0; i < imgs.length; i++) {\n    imgs[i].addEventListener('click', () => {\n      imgs[\n        i\n      ].innerHTML = `<img class=\"img-child\" src=\"${window.app.cardsForCurrentGame[i].img}\" alt=\"${window.app.cardsForCurrentGame[i].name}\" />`;\n      imgs[i].style.transform = 'rotateY(180deg) scale(-1, 1)';\n\n      // добавляем пару выбранных карт в window.app.userCards\n      if (!window.app.userCards[0] && !window.app.userTargets.includes(i)) {\n        window.app.userCards[0] = window.app.cardsForCurrentGame[i].name;\n        window.app.userTargets.push(i);\n      }\n\n      if (window.app.userCards[0] && !window.app.userTargets.includes(i)) {\n        window.app.userCards[1] = window.app.cardsForCurrentGame[i].name;\n        window.app.userTargets.push(i);\n\n        //если карты не совпадают, обнуляем все результаты\n        if (window.app.userCards[0] !== window.app.userCards[1]) {\n          window.app.userCards = [];\n          window.app.userTargets = [];\n          window.app.guessedPairs = [];\n\n          setTimeout(hideCardsChild, window.app.commonDelay);\n        }\n\n        //если карты совпадают, добавляем в список угаданных пар\n        if (\n          window.app.userCards.length > 0 &&\n          window.app.userCards[0] === window.app.userCards[1]\n        ) {\n          if (!window.app.guessedPairs.includes(window.app.userCards[0])) {\n            window.app.guessedPairs.push(window.app.userCards[0]);\n          }\n\n          window.app.userCards = [];\n\n          if (window.app.guessedPairs.length === window.app.level * 3) {\n            clearInterval(window.app.stopwatch);\n\n            setTimeout(generateWinScreen, window.app.commonDelay);\n          }\n        }\n      }\n    });\n  }\n}\n","import { cardTemplate } from './card-template.js';\nimport { hideCards } from './hide-card.js';\nimport { generateWinScreen } from './generate-win-screen.js';\nimport { generateLoseScreen } from './generate-lose-screen.js';\n\n/**\n * Открываем карту по клику\n */\n\nexport function showCard() {\n  const imgs = document.querySelectorAll('.card');\n\n  for (let i = 0; i < imgs.length; i++) {\n    imgs[i].addEventListener('click', () => {\n      imgs[i].innerHTML = cardTemplate(window.app.cardsForCurrentGame[i]);\n      imgs[i].style.transform = 'rotateY(180deg) scale(-1, 1)';\n\n      // добавляем пару выбранных карт в window.app.userCards\n      if (!window.app.userCards[0] && !window.app.userTargets.includes(i)) {\n        window.app.userCards[0] = window.app.cardsForCurrentGame[i].name;\n        window.app.userTargets.push(i);\n      }\n\n      if (window.app.userCards[0] && !window.app.userTargets.includes(i)) {\n        window.app.userCards[1] = window.app.cardsForCurrentGame[i].name;\n        window.app.userTargets.push(i);\n\n        resetResults(); //если карты не совпадают, обнуляем все результаты\n        addGuessedPairs(); //если карты совпадают, добавляем в список угаданных пар\n      }\n    });\n  }\n}\n\nfunction resetResults() {\n  if (window.app.userCards[0] !== window.app.userCards[1]) {\n    window.app.userCards = [];\n    window.app.userTargets = [];\n    window.app.guessedPairs = [];\n\n    const attempts = document.querySelectorAll('.attempt');\n    attempts[window.app.attempts].style.background = '#c14a00';\n\n    window.app.attempts++;\n\n    if (window.app.attempts === 3) {\n      setTimeout(generateLoseScreen, window.app.commonDelay);\n    }\n\n    setTimeout(hideCards, window.app.commonDelay);\n  }\n}\n\nfunction addGuessedPairs() {\n  if (\n    window.app.userCards.length > 0 &&\n    window.app.userCards[0] === window.app.userCards[1]\n  ) {\n    if (!window.app.guessedPairs.includes(window.app.userCards[0])) {\n      window.app.guessedPairs.push(window.app.userCards[0]);\n    }\n\n    window.app.userCards = [];\n\n    if (window.app.guessedPairs.length === window.app.level * 3) {\n      clearInterval(window.app.stopwatch);\n\n      setTimeout(generateWinScreen, window.app.commonDelay);\n    }\n  }\n}\n","import { doubleArr, shuffle } from './utils/arr-utils.js';\nimport { increaseTime } from './stopwatch.js';\nimport { hideCardsBaby } from './hide-card.js';\nimport { showCardBaby } from './show-card-baby.js';\n\n/***\n *\n */\n\nexport function showDataBaby() {\n  const data = ['#d92519', '#fff500', '#194888', '#02913f'];\n  const shuffledData = shuffle(data);\n  const randomCards = shuffledData.splice(0, Number(window.app.level) + 1);\n\n  window.app.cardsForCurrentGame = shuffle(doubleArr(randomCards));\n\n  generateCardsContentBaby();\n\n  window.app.stopwatch = setInterval(increaseTime, 1000, window.app); // запуск секундомера\n\n  window.app.delay = setTimeout(hideCardsBaby, window.app.cardDisplayTime); // время показа карт 5s\n\n  showCardBaby();\n}\n\n/**\n * Заполнение n карт данными из массива data = shuffle(doubleCards)\n */\n\nfunction generateCardsContentBaby() {\n  let imgs = document.querySelectorAll('.card');\n\n  for (let i = 0; i < imgs.length; i++) {\n    imgs[i].style.background = `${window.app.cardsForCurrentGame[i]}`;\n    imgs[i].style.border = '10px solid #ffffff';\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\n  }\n}\n","import { doubleArr, shuffle } from './utils/arr-utils.js';\nimport { increaseTime } from './stopwatch.js';\nimport { hideCardsChild } from './hide-card.js';\nimport { showCardChild } from './show-card-child.js';\n\n/***\n * Вывод данных data из файла *.json в карточки\n */\n\nexport function showDataChild(data) {\n  const shuffledData = shuffle(data);\n  const randomCards = shuffledData.splice(0, window.app.level * 3);\n\n  window.app.cardsForCurrentGame = shuffle(doubleArr(randomCards));\n\n  generateCardsContentChild(window.app.cardsForCurrentGame);\n\n  window.app.stopwatch = setInterval(increaseTime, 1000, window.app); // запуск секундомера\n\n  window.app.delay = setTimeout(\n    hideCardsChild,\n    window.app.cardDisplayTime +\n      2 * window.app.cardDisplayTimeDelay * (window.app.level - 1)\n  ); // время показа карт 5s, 7s, 9s\n\n  showCardChild();\n}\n\n/**\n * Заполнение n карт данными из массива data = shuffle(doubleCards)\n */\n\nfunction generateCardsContentChild(data) {\n  let imgs = document.querySelectorAll('.card');\n\n  for (let i = 0; i < imgs.length; i++) {\n    imgs[\n      i\n    ].innerHTML = `<img class=\"img-child\" src=\"./../${data[i].img}\" alt=\"${data[i].name}\" />`;\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\n  }\n}\n","import { doubleArr, shuffle } from './utils/arr-utils.js';\nimport { increaseTime } from './stopwatch.js';\nimport { hideCards } from './hide-card.js';\nimport { showCard } from './show-card.js';\nimport { cardTemplate } from './card-template.js';\n\n/***\n * Вывод данных data из файла *.json в карточки\n */\n\nexport function showData(data) {\n  const shuffledData = shuffle(data);\n  const randomCards = shuffledData.splice(0, window.app.level * 3);\n\n  window.app.cardsForCurrentGame = shuffle(doubleArr(randomCards));\n\n  generateCardsContent(window.app.cardsForCurrentGame);\n\n  window.app.stopwatch = setInterval(increaseTime, 1000, window.app); // запуск секундомера\n\n  window.app.delay = setTimeout(\n    hideCards,\n    window.app.cardDisplayTime +\n      window.app.cardDisplayTimeDelay * (window.app.level - 1)\n  ); // время показа карт 5s, 6s, 7s\n\n  showCard();\n}\n\n/**\n * Заполнение n карт данными из массива data = shuffle(doubleCards)\n */\n\nfunction generateCardsContent(data) {\n  let imgs = document.querySelectorAll('.card');\n\n  for (let i = 0; i < imgs.length; i++) {\n    imgs[i].innerHTML = cardTemplate(data[i]);\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\n  }\n}\n","/**\n * Секундомер\n */\n\nexport function increaseTime(app) {\n  app.userTimeSekMin[0]++;\n\n  const countSek = document.querySelector('.timer__count_sek');\n  const countMin = document.querySelector('.timer__count_min');\n\n  countSek.textContent = '0' + app.userTimeSekMin[0];\n\n  if (10 <= app.userTimeSekMin[0] && app.userTimeSekMin[0] <= 59) {\n    countSek.textContent = app.userTimeSekMin[0];\n  }\n\n  if (app.userTimeSekMin[0] === 60) {\n    countSek.textContent = '00';\n    app.userTimeSekMin[0] = 0;\n\n    app.userTimeSekMin[1]++;\n    countMin.textContent = '0' + app.userTimeSekMin[1];\n\n    if (10 <= app.userTimeSekMin[1] && app.userTimeSekMin[1] <= 59) {\n      countMin.textContent = app.userTimeSekMin[1];\n    }\n\n    if (app.userTimeSekMin[1] === 60) {\n      countSek.textContent = '00';\n      countMin.textContent = '00';\n      app.userTimeSekMin[0] = 0;\n      app.userTimeSekMin[1] = 0;\n    }\n  }\n}\n","/**\n *Дублирование элементов массива\n */\n\nexport function doubleArr(a) {\n  return a.concat(a);\n}\n\n/**\n * Перемешивание элементов массива\n */\n\nexport function shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1)); // случайный индекс от 0 до i\n\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import '../style.css';\n\nimport { generateHelloScreen } from './generate-hello-screen.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  window.app = {\n    userTimeSekMin: [0, 0],\n    cardsForCurrentGame: [],\n    userCards: [],\n    userTargets: [],\n    guessedPairs: [],\n    attempts: 0,\n    commonDelay: 400,\n    cardDisplayTime: 5000,\n    cardDisplayTimeDelay: 1000,\n  };\n\n  const screenContainer = document.querySelector('.screen-container');\n  generateHelloScreen(screenContainer);\n});\n"],"names":[],"sourceRoot":""}