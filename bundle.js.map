{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://memory-game/./src/ts/utils/arr-utils.ts","webpack://memory-game/./src/ts/stopwatch.ts","webpack://memory-game/./src/ts/hide-card.ts","webpack://memory-game/./src/ts/card-template.ts","webpack://memory-game/./src/ts/generate-win-screen.ts","webpack://memory-game/./src/ts/generate-lose-screen.ts","webpack://memory-game/./src/ts/show-data.ts","webpack://memory-game/./src/ts/show-card.ts","webpack://memory-game/./src/ts/generate-game-screen.ts","webpack://memory-game/./src/ts/generate-game-screen-child.ts","webpack://memory-game/./src/ts/show-data-child.ts","webpack://memory-game/./src/ts/show-card-child.ts","webpack://memory-game/./src/ts/generate-game-screen-baby.ts","webpack://memory-game/./src/ts/show-data-baby.ts","webpack://memory-game/./src/ts/show-card-baby.ts","webpack://memory-game/./src/ts/generate-start-screen.ts","webpack://memory-game/./src/ts/generate-hello-screen.ts","webpack://memory-game/./src/ts/index.ts"],"sourcesContent":["type cardObj = {\r\n  name: string;\r\n  text: string;\r\n  img: string;\r\n  suit: string;\r\n};\r\n\r\n/**\r\n *Дублирование элементов массива\r\n */\r\n\r\nexport function doubleArr<T>(a: T[]): T[] {\r\n  return a.concat(a);\r\n}\r\n\r\n/**\r\n * Перемешивание элементов массива\r\n */\r\n\r\nexport function shuffle<T>(array: T[]): T[] {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1)); // случайный индекс от 0 до i\r\n\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n\r\n  return array;\r\n}\r\n","/**\r\n * Секундомер\r\n */\r\n\r\nexport function increaseTime(): void {\r\n  window.app.userTimeSekMin[0]++;\r\n\r\n  const countSek = document.querySelector(\r\n    '.timer__count_sek'\r\n  ) as HTMLDivElement;\r\n  const countMin = document.querySelector(\r\n    '.timer__count_min'\r\n  ) as HTMLDivElement;\r\n\r\n  countSek.textContent = '0' + window.app.userTimeSekMin[0];\r\n\r\n  if (\r\n    10 <= window.app.userTimeSekMin[0] &&\r\n    window.app.userTimeSekMin[0] <= 59\r\n  ) {\r\n    countSek.textContent = window.app.userTimeSekMin[0].toString();\r\n  }\r\n\r\n  if (window.app.userTimeSekMin[0] === 60) {\r\n    countSek.textContent = '00';\r\n    window.app.userTimeSekMin[0] = 0;\r\n\r\n    window.app.userTimeSekMin[1]++;\r\n    countMin.textContent = '0' + window.app.userTimeSekMin[1];\r\n\r\n    if (\r\n      10 <= window.app.userTimeSekMin[1] &&\r\n      window.app.userTimeSekMin[1] <= 59\r\n    ) {\r\n      countMin.textContent = window.app.userTimeSekMin[1].toString();\r\n    }\r\n\r\n    if (window.app.userTimeSekMin[1] === 60) {\r\n      countSek.textContent = '00';\r\n      countMin.textContent = '00';\r\n      window.app.userTimeSekMin[0] = 0;\r\n      window.app.userTimeSekMin[1] = 0;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Переворот карты рубашкой вверх\r\n */\r\n\r\nexport function hideCards(): void {\r\n  let imgs = document.querySelectorAll<HTMLDivElement>('.card');\r\n\r\n  for (let i = 0; i < imgs.length; i++) {\r\n    imgs[i].innerHTML = '<img src=\"./static/img/back.png\" alt=\"Card back\" />';\r\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\r\n    imgs[i].setAttribute('style', 'pointer-events: auto;');\r\n    imgs[i].style.cursor = 'pointer';\r\n  }\r\n}\r\n\r\nexport function hideCardsChild(): void {\r\n  let imgs = document.querySelectorAll<HTMLDivElement>('.card');\r\n\r\n  for (let i = 0; i < imgs.length; i++) {\r\n    imgs[i].innerHTML =\r\n      '<img class=\"img-child\" src=\"./static/img/back.png\" alt=\"Card back\" />';\r\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\r\n    imgs[i].setAttribute('style', 'pointer-events: auto;');\r\n    imgs[i].style.cursor = 'pointer';\r\n  }\r\n}\r\n\r\nexport function hideCardsBaby(): void {\r\n  let imgs = document.querySelectorAll<HTMLDivElement>('.card');\r\n\r\n  for (let i = 0; i < imgs.length; i++) {\r\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\r\n    imgs[i].setAttribute('style', 'pointer-events: auto;');\r\n    imgs[i].style.cursor = 'pointer';\r\n    imgs[i].style.background = '#c8e7ff';\r\n  }\r\n}\r\n","type cardObj = {\r\n  name: string;\r\n  text: string;\r\n  img: string;\r\n  suit: string;\r\n};\r\n\r\nexport function cardTemplate(data: cardObj | string): string {\r\n  if (typeof data !== 'string') {\r\n    return `<div class=\"card__content\">\r\n  <div class=\"card__info card__info_top\">\r\n    <div class=\"card__text\">${data.text}</div>\r\n    <img\r\n      class=\"card__suit\"\r\n      src=\"${data.suit}\"\r\n      alt=\"${data.name}\"\r\n    />\r\n  </div>\r\n  <div class=\"card__center\">\r\n    <img src=\"${data.suit}\"\r\n    alt=\"${data.name}\" />\r\n  </div>\r\n  <div class=\"card__info card__info_bottom\">\r\n    <div class=\"card__text\">${data.text}</div>\r\n    <img\r\n      class=\"card__suit\"\r\n      src=\"${data.suit}\"\r\n      alt=\"${data.name} \"\r\n    />\r\n  </div>\r\n  </div>\r\n  </div>`;\r\n  } else return '';\r\n}\r\n","import { generateStartScreen } from './generate-start-screen';\r\n\r\nexport function generateWinScreen(): void {\r\n  const shadow = document.createElement('div');\r\n  shadow.classList.add('shadow');\r\n\r\n  const formWin = document.createElement('form');\r\n  formWin.classList.add('form', 'form__win');\r\n\r\n  const imgWin = document.createElement('img');\r\n  imgWin.classList.add('img-win');\r\n  imgWin.src = './static/img/win.png';\r\n\r\n  const h2Title = document.createElement('h2');\r\n  h2Title.classList.add('h2-title');\r\n  h2Title.textContent = 'Вы выиграли!';\r\n\r\n  const text = document.createElement('p');\r\n  text.classList.add('final-text');\r\n  text.textContent = 'Затраченное время:';\r\n\r\n  const min = document.querySelector('.timer__count_min') as HTMLDivElement;\r\n  const sek = document.querySelector('.timer__count_sek') as HTMLDivElement;\r\n\r\n  const time = document.createElement('p');\r\n  time.classList.add('final-time');\r\n  time.textContent = min.textContent + '.' + sek.textContent;\r\n\r\n  const buttonRepeat = document.createElement('button');\r\n  buttonRepeat.classList.add('button');\r\n  buttonRepeat.textContent = 'Играть снова';\r\n\r\n  const screenContainer = document.querySelector(\r\n    '.screen-container'\r\n  ) as HTMLDivElement;\r\n  screenContainer.appendChild(shadow);\r\n  screenContainer.appendChild(formWin);\r\n  formWin.appendChild(imgWin);\r\n  formWin.appendChild(h2Title);\r\n  formWin.appendChild(text);\r\n  formWin.appendChild(time);\r\n  formWin.appendChild(buttonRepeat);\r\n\r\n  formWin.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    screenContainer.innerHTML = '';\r\n    generateStartScreen(screenContainer);\r\n  });\r\n}\r\n","import { generateStartScreen } from './generate-start-screen';\r\n\r\nexport function generateLoseScreen(): void {\r\n  const shadow = document.createElement('div');\r\n  shadow.classList.add('shadow');\r\n\r\n  const formLose = document.createElement('form');\r\n  formLose.classList.add('form', 'form__lose');\r\n\r\n  const imgLose = document.createElement('img');\r\n  imgLose.classList.add('img-lose');\r\n  imgLose.src = './static/img/lose.png';\r\n\r\n  const h2Title = document.createElement('h2');\r\n  h2Title.classList.add('h2-title');\r\n  h2Title.textContent = 'Вы проиграли!';\r\n\r\n  const text = document.createElement('p');\r\n  text.classList.add('final-text');\r\n  text.textContent = 'Затраченное время:';\r\n\r\n  const min = document.querySelector('.timer__count_min') as HTMLDivElement;\r\n  const sek = document.querySelector('.timer__count_sek') as HTMLDivElement;\r\n\r\n  const time = document.createElement('p');\r\n  time.classList.add('final-time');\r\n  time.textContent = min.textContent + '.' + sek.textContent;\r\n\r\n  const buttonRepeat = document.createElement('button');\r\n  buttonRepeat.classList.add('button');\r\n  buttonRepeat.textContent = 'Играть снова';\r\n\r\n  const screenContainer = document.querySelector(\r\n    '.screen-container'\r\n  ) as HTMLDivElement;\r\n  screenContainer.appendChild(shadow);\r\n  screenContainer.appendChild(formLose);\r\n  formLose.appendChild(imgLose);\r\n  formLose.appendChild(h2Title);\r\n  formLose.appendChild(text);\r\n  formLose.appendChild(time);\r\n  formLose.appendChild(buttonRepeat);\r\n\r\n  formLose.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    screenContainer.innerHTML = '';\r\n    generateStartScreen(screenContainer);\r\n  });\r\n}\r\n","import { doubleArr, shuffle } from './utils/arr-utils';\r\nimport { increaseTime } from './stopwatch';\r\nimport { hideCards } from './hide-card';\r\nimport { showCard } from './show-card';\r\nimport { cardTemplate } from './card-template';\r\n\r\n/***\r\n * Вывод данных data из файла *.json в карточки\r\n */\r\n\r\ntype cardObj = {\r\n  name: string;\r\n  text: string;\r\n  img: string;\r\n  suit: string;\r\n};\r\n\r\nfunction isObjArray(arg: (cardObj | string)[]): arg is cardObj[] {\r\n  return typeof arg === 'object';\r\n}\r\n\r\nexport function showData(data: cardObj[]): void {\r\n  const dataClone = data.slice();\r\n  const shuffledData = shuffle(dataClone);\r\n  const randomCards = shuffledData.splice(0, Number(window.app.level) * 3);\r\n\r\n  window.app.cardsForCurrentGame = shuffle(doubleArr(randomCards));\r\n\r\n  if (isObjArray(window.app.cardsForCurrentGame)) {\r\n    generateCardsContent(window.app.cardsForCurrentGame);\r\n  }\r\n\r\n  window.app.stopwatch = window.setInterval(increaseTime, 1000); // запуск секундомера\r\n\r\n  window.app.delay = window.setTimeout(\r\n    hideCards,\r\n    window.app.cardDisplayTime +\r\n      window.app.cardDisplayTimeDelay * (Number(window.app.level) - 1)\r\n  ); // время показа карт 5s, 6s, 7s\r\n\r\n  showCard();\r\n}\r\n\r\n/**\r\n * Заполнение n карт данными из массива data = shuffle(doubleCards)\r\n */\r\n\r\nfunction generateCardsContent(data: cardObj[]): void {\r\n  let imgs = document.querySelectorAll<HTMLDivElement>('.card');\r\n\r\n  for (let i = 0; i < imgs.length; i++) {\r\n    imgs[i].innerHTML = cardTemplate(data[i]);\r\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\r\n  }\r\n}\r\n","import { cardTemplate } from './card-template';\r\nimport { hideCards } from './hide-card';\r\nimport { generateWinScreen } from './generate-win-screen';\r\nimport { generateLoseScreen } from './generate-lose-screen';\r\n\r\n/**\r\n * Открываем карту по клику\r\n */\r\n\r\ntype cardObj = {\r\n  name: string;\r\n  text: string;\r\n  img: string;\r\n  suit: string;\r\n};\r\n\r\nfunction isObjArray(arg: (cardObj | string)[]): arg is cardObj[] {\r\n  return typeof arg === 'object';\r\n}\r\n\r\nexport function showCard(): void {\r\n  const imgs = document.querySelectorAll<HTMLDivElement>('.card');\r\n  const cardsForCurrentGame = window.app.cardsForCurrentGame;\r\n\r\n  if (isObjArray(cardsForCurrentGame)) {\r\n    for (let i = 0; i < imgs.length; i++) {\r\n      imgs[i].addEventListener('click', () => {\r\n        imgs[i].innerHTML = cardTemplate(cardsForCurrentGame[i]);\r\n        imgs[i].style.transform = 'rotateY(180deg) scale(-1, 1)';\r\n\r\n        // добавляем пару выбранных карт в window.app.userCards\r\n        if (!window.app.userCards[0] && !window.app.userTargets.includes(i)) {\r\n          window.app.userCards[0] = cardsForCurrentGame[i].name;\r\n          window.app.userTargets.push(i);\r\n        }\r\n\r\n        if (window.app.userCards[0] && !window.app.userTargets.includes(i)) {\r\n          window.app.userCards[1] = cardsForCurrentGame[i].name;\r\n          window.app.userTargets.push(i);\r\n\r\n          resetResults(); //если карты не совпадают, обнуляем все результаты\r\n          addGuessedPairs(); //если карты совпадают, добавляем в список угаданных пар\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction resetResults(): void {\r\n  if (window.app.userCards[0] !== window.app.userCards[1]) {\r\n    window.app.userCards = [];\r\n    window.app.userTargets = [];\r\n    window.app.guessedPairs = [];\r\n\r\n    const attempts = document.querySelectorAll<HTMLDivElement>('.attempt');\r\n    attempts[window.app.attempts].style.background = '#c14a00';\r\n\r\n    window.app.attempts++;\r\n\r\n    if (window.app.attempts === 3) {\r\n      setTimeout(generateLoseScreen, window.app.commonDelay);\r\n    }\r\n\r\n    setTimeout(hideCards, window.app.commonDelay);\r\n  }\r\n}\r\n\r\nfunction addGuessedPairs(): void {\r\n  if (\r\n    window.app.userCards.length > 0 &&\r\n    window.app.userCards[0] === window.app.userCards[1]\r\n  ) {\r\n    if (!window.app.guessedPairs.includes(window.app.userCards[0])) {\r\n      window.app.guessedPairs.push(window.app.userCards[0]);\r\n    }\r\n\r\n    window.app.userCards = [];\r\n\r\n    if (window.app.guessedPairs.length === Number(window.app.level) * 3) {\r\n      clearInterval(window.app.stopwatch);\r\n\r\n      setTimeout(generateWinScreen, window.app.commonDelay);\r\n    }\r\n  }\r\n}\r\n","import { showData } from './show-data';\r\nimport cardsData from '../data/cards.json';\r\nimport { generateStartScreen } from './generate-start-screen';\r\n\r\n/**\r\n * Генерация экрана игры\r\n */\r\n\r\nexport function generateGameScreen(container: HTMLDivElement): void {\r\n  window.app.userTimeSekMin = [0, 0];\r\n  window.app.guessedPairs = [];\r\n  window.app.userCards = [];\r\n  window.app.userTargets = [];\r\n  window.app.attempts = 0;\r\n\r\n  clearTimeout(window.app.delay);\r\n  clearInterval(window.app.stopwatch);\r\n\r\n  container.innerHTML = '';\r\n  const header = document.createElement('div');\r\n  header.classList.add('header');\r\n\r\n  const timer = document.createElement('div');\r\n  timer.classList.add('timer');\r\n\r\n  const minText = document.createElement('p');\r\n  minText.classList.add('timer__text');\r\n  minText.textContent = 'min';\r\n\r\n  const sekText = document.createElement('p');\r\n  sekText.classList.add('timer__text', 'timer__text_sek');\r\n  sekText.textContent = 'sek';\r\n\r\n  const min = document.createElement('p');\r\n  min.classList.add('timer__count', 'timer__count_min');\r\n  min.textContent = '00';\r\n\r\n  const dot = document.createElement('p');\r\n  dot.classList.add('timer__count');\r\n  dot.textContent = '.';\r\n\r\n  const sek = document.createElement('p');\r\n  sek.classList.add('timer__count', 'timer__count_sek');\r\n  sek.textContent = '00';\r\n\r\n  const attempts = document.createElement('div');\r\n  attempts.classList.add('attempts');\r\n\r\n  const attempt1 = document.createElement('div');\r\n  attempt1.classList.add('attempt');\r\n  const attempt2 = document.createElement('div');\r\n  attempt2.classList.add('attempt');\r\n  const attempt3 = document.createElement('div');\r\n  attempt3.classList.add('attempt');\r\n\r\n  const buttonRepeat = document.createElement('button');\r\n  buttonRepeat.classList.add('button');\r\n  buttonRepeat.textContent = 'Начать заново';\r\n\r\n  const cardsContainer = document.createElement('div');\r\n  cardsContainer.classList.add('cards-container');\r\n\r\n  container.appendChild(header);\r\n  header.appendChild(timer);\r\n  timer.appendChild(minText);\r\n  timer.appendChild(sekText);\r\n  timer.appendChild(min);\r\n  timer.appendChild(dot);\r\n  timer.appendChild(sek);\r\n\r\n  header.appendChild(attempts);\r\n  attempts.appendChild(attempt1);\r\n  attempts.appendChild(attempt2);\r\n  attempts.appendChild(attempt3);\r\n\r\n  header.appendChild(buttonRepeat);\r\n  container.appendChild(cardsContainer);\r\n\r\n  generateCards(cardsContainer); // Вывод карт на экран\r\n  showData(cardsData);\r\n\r\n  buttonRepeat.addEventListener('click', () => {\r\n    container.innerHTML = '';\r\n    generateStartScreen(container);\r\n  });\r\n}\r\n\r\n/**\r\n * Генерация и вывод карт на экран\r\n */\r\n\r\nfunction generateCards(container: HTMLDivElement): void {\r\n  const cardWidth = 95;\r\n  const cardHeight = 133;\r\n  const gap = 15;\r\n  const numberOfCardsInRow = 6;\r\n\r\n  container.style.width =\r\n    numberOfCardsInRow * cardWidth + (numberOfCardsInRow - 1) * gap + 'px';\r\n  container.style.height =\r\n    Number(window.app.level) * cardHeight +\r\n    (Number(window.app.level) - 1) * gap +\r\n    'px';\r\n\r\n  for (let i = 0; i < numberOfCardsInRow * Number(window.app.level); i++) {\r\n    const card = document.createElement('div');\r\n\r\n    card.classList.add('card');\r\n    card.style.background = '#c2f5ff';\r\n    container.appendChild(card);\r\n  }\r\n}\r\n","import { showDataChild } from './show-data-child';\r\nimport cardsDataChild from '../data/cards-child.json';\r\n\r\nimport { generateStartScreen } from './generate-start-screen';\r\n\r\n/**\r\n * Генерация экрана детской игры\r\n */\r\n\r\nexport function generateGameScreenChild(container: HTMLDivElement): void {\r\n  window.app.userTimeSekMin = [0, 0];\r\n  window.app.guessedPairs = [];\r\n  window.app.userCards = [];\r\n  window.app.userTargets = [];\r\n  window.app.attempts = 0;\r\n\r\n  clearTimeout(window.app.delay);\r\n  clearInterval(window.app.stopwatch);\r\n\r\n  container.innerHTML = '';\r\n  const header = document.createElement('div');\r\n  header.classList.add('header');\r\n\r\n  const timer = document.createElement('div');\r\n  timer.classList.add('timer');\r\n\r\n  const minText = document.createElement('p');\r\n  minText.classList.add('timer__text');\r\n  minText.textContent = 'min';\r\n\r\n  const sekText = document.createElement('p');\r\n  sekText.classList.add('timer__text', 'timer__text_sek');\r\n  sekText.textContent = 'sek';\r\n\r\n  const min = document.createElement('p');\r\n  min.classList.add('timer__count', 'timer__count_min');\r\n  min.textContent = '00';\r\n\r\n  const dot = document.createElement('p');\r\n  dot.classList.add('timer__count');\r\n  dot.textContent = '.';\r\n\r\n  const sek = document.createElement('p');\r\n  sek.classList.add('timer__count', 'timer__count_sek');\r\n  sek.textContent = '00';\r\n\r\n  const attempts = document.createElement('div');\r\n  attempts.classList.add('attempts');\r\n\r\n  const attempt1 = document.createElement('div');\r\n  attempt1.classList.add('attempt');\r\n  const attempt2 = document.createElement('div');\r\n  attempt2.classList.add('attempt');\r\n  const attempt3 = document.createElement('div');\r\n  attempt3.classList.add('attempt');\r\n\r\n  const buttonRepeat = document.createElement('button');\r\n  buttonRepeat.classList.add('button');\r\n  buttonRepeat.textContent = 'Начать заново';\r\n\r\n  const cardsContainer = document.createElement('div');\r\n  cardsContainer.classList.add('cards-container-child');\r\n\r\n  container.appendChild(header);\r\n  header.appendChild(timer);\r\n  timer.appendChild(minText);\r\n  timer.appendChild(sekText);\r\n  timer.appendChild(min);\r\n  timer.appendChild(dot);\r\n  timer.appendChild(sek);\r\n\r\n  header.appendChild(buttonRepeat);\r\n  container.appendChild(cardsContainer);\r\n\r\n  generateCardsChild(cardsContainer); // Вывод картинок на экран\r\n  showDataChild(cardsDataChild);\r\n\r\n  buttonRepeat.addEventListener('click', () => {\r\n    container.innerHTML = '';\r\n    generateStartScreen(container);\r\n  });\r\n}\r\n\r\n/**\r\n * Генерация и вывод картинок на экран\r\n */\r\n\r\nfunction generateCardsChild(container: HTMLDivElement): void {\r\n  const cardsContainer = document.querySelector(\r\n    '.cards-container-child'\r\n  ) as HTMLDivElement;\r\n  cardsContainer.classList.add(`cards-container-child_${window.app.level}`);\r\n\r\n  for (let i = 0; i < 6 * Number(window.app.level); i++) {\r\n    const card = document.createElement('div');\r\n    card.classList.add('card');\r\n    card.style.background = '#c2f5ff';\r\n    container.appendChild(card);\r\n  }\r\n\r\n  let cardWidth = 120;\r\n  let numberOfCardsInRow = 3;\r\n  let numberOfCardsInColumn = 2;\r\n  const gap = 15;\r\n\r\n  if (window.app.level === '1') {\r\n    cardWidth = 150;\r\n    numberOfCardsInRow = 3;\r\n    numberOfCardsInColumn = 2;\r\n  }\r\n\r\n  if (window.app.level === '2') {\r\n    numberOfCardsInRow = 4;\r\n    numberOfCardsInColumn = 3;\r\n  }\r\n\r\n  if (window.app.level === '3') {\r\n    numberOfCardsInRow = 6;\r\n    numberOfCardsInColumn = 3;\r\n  }\r\n\r\n  container.style.width =\r\n    numberOfCardsInRow * cardWidth + (numberOfCardsInRow - 1) * gap + 'px';\r\n  container.style.height =\r\n    numberOfCardsInColumn * cardWidth +\r\n    (numberOfCardsInColumn - 1) * gap +\r\n    'px';\r\n}\r\n","import { doubleArr, shuffle } from './utils/arr-utils';\r\nimport { increaseTime } from './stopwatch';\r\nimport { hideCardsChild } from './hide-card';\r\nimport { showCardChild } from './show-card-child';\r\n\r\n/***\r\n * Вывод данных data из файла *.json в карточки\r\n */\r\n\r\ntype cardObj = {\r\n  name: string;\r\n  text: string;\r\n  img: string;\r\n  suit: string;\r\n};\r\n\r\nexport function showDataChild(data: cardObj[]): void {\r\n  const dataClone = data.slice();\r\n  const shuffledData = shuffle(dataClone);\r\n\r\n  const randomCards = shuffledData.splice(0, Number(window.app.level) * 3);\r\n\r\n  function isObjArray(arg: (cardObj | string)[]): arg is cardObj[] {\r\n    return typeof arg === 'object';\r\n  }\r\n\r\n  window.app.cardsForCurrentGame = shuffle(doubleArr(randomCards));\r\n\r\n  if (isObjArray(window.app.cardsForCurrentGame)) {\r\n    generateCardsContentChild(window.app.cardsForCurrentGame);\r\n  }\r\n\r\n  window.app.stopwatch = window.setInterval(increaseTime, 1000); // запуск секундомера\r\n\r\n  window.app.delay = window.setTimeout(\r\n    hideCardsChild,\r\n    window.app.cardDisplayTime +\r\n      2 * window.app.cardDisplayTimeDelay * (Number(window.app.level) - 1)\r\n  ); // время показа карт 5s, 7s, 9s\r\n\r\n  showCardChild();\r\n}\r\n\r\n/**\r\n * Заполнение n карт данными из массива data = shuffle(doubleCards)\r\n */\r\n\r\nfunction generateCardsContentChild(data: cardObj[]): void {\r\n  let imgs = document.querySelectorAll<HTMLDivElement>('.card');\r\n\r\n  for (let i = 0; i < imgs.length; i++) {\r\n    imgs[\r\n      i\r\n    ].innerHTML = `<img class=\"img-child\" src=\"${data[i].img}\" alt=\"${data[i].name}\" />`;\r\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\r\n  }\r\n}\r\n","import { hideCardsChild } from './hide-card';\r\nimport { generateWinScreen } from './generate-win-screen';\r\n\r\n/**\r\n * Открываем карту по клику\r\n */\r\n\r\ntype cardObj = {\r\n  name: string;\r\n  text: string;\r\n  img: string;\r\n  suit: string;\r\n};\r\n\r\nfunction isObjArray(arg: (cardObj | string)[]): arg is cardObj[] {\r\n  return typeof arg === 'object';\r\n}\r\n\r\nexport function showCardChild(): void {\r\n  const imgs = document.querySelectorAll<HTMLDivElement>('.card');\r\n  const cardsForCurrentGame = window.app.cardsForCurrentGame;\r\n\r\n  if (isObjArray(cardsForCurrentGame)) {\r\n    for (let i = 0; i < imgs.length; i++) {\r\n      imgs[i].addEventListener('click', () => {\r\n        imgs[\r\n          i\r\n        ].innerHTML = `<img class=\"img-child\" src=\"${cardsForCurrentGame[i].img}\" alt=\"${cardsForCurrentGame[i].name}\" />`;\r\n        imgs[i].style.transform = 'rotateY(180deg) scale(-1, 1)';\r\n\r\n        // добавляем пару выбранных карт в window.app.userCards\r\n        if (!window.app.userCards[0] && !window.app.userTargets.includes(i)) {\r\n          window.app.userCards[0] = cardsForCurrentGame[i].name;\r\n          window.app.userTargets.push(i);\r\n        }\r\n\r\n        if (window.app.userCards[0] && !window.app.userTargets.includes(i)) {\r\n          window.app.userCards[1] = cardsForCurrentGame[i].name;\r\n          window.app.userTargets.push(i);\r\n\r\n          //если карты не совпадают, обнуляем все результаты\r\n          if (window.app.userCards[0] !== window.app.userCards[1]) {\r\n            window.app.userCards = [];\r\n            window.app.userTargets = [];\r\n            window.app.guessedPairs = [];\r\n\r\n            setTimeout(hideCardsChild, window.app.commonDelay);\r\n          }\r\n\r\n          //если карты совпадают, добавляем в список угаданных пар\r\n          if (\r\n            window.app.userCards.length > 0 &&\r\n            window.app.userCards[0] === window.app.userCards[1]\r\n          ) {\r\n            if (!window.app.guessedPairs.includes(window.app.userCards[0])) {\r\n              window.app.guessedPairs.push(window.app.userCards[0]);\r\n            }\r\n\r\n            window.app.userCards = [];\r\n\r\n            if (\r\n              window.app.guessedPairs.length ===\r\n              Number(window.app.level) * 3\r\n            ) {\r\n              clearInterval(window.app.stopwatch);\r\n\r\n              setTimeout(generateWinScreen, window.app.commonDelay);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { showDataBaby } from './show-data-baby';\r\nimport { generateStartScreen } from './generate-start-screen';\r\n\r\n/**\r\n * Генерация экрана игры для малышей\r\n */\r\n\r\nexport function generateGameScreenBaby(container: HTMLDivElement): void {\r\n  window.app.userTimeSekMin = [0, 0];\r\n  window.app.guessedPairs = [];\r\n  window.app.userCards = [];\r\n  window.app.userTargets = [];\r\n  window.app.attempts = 0;\r\n\r\n  clearTimeout(window.app.delay);\r\n  clearInterval(window.app.stopwatch);\r\n\r\n  container.innerHTML = '';\r\n  const header = document.createElement('div');\r\n  header.classList.add('header');\r\n\r\n  const timer = document.createElement('div');\r\n  timer.classList.add('timer');\r\n\r\n  const minText = document.createElement('p');\r\n  minText.classList.add('timer__text');\r\n  minText.textContent = 'min';\r\n\r\n  const sekText = document.createElement('p');\r\n  sekText.classList.add('timer__text', 'timer__text_sek');\r\n  sekText.textContent = 'sek';\r\n\r\n  const min = document.createElement('p');\r\n  min.classList.add('timer__count', 'timer__count_min');\r\n  min.textContent = '00';\r\n\r\n  const dot = document.createElement('p');\r\n  dot.classList.add('timer__count');\r\n  dot.textContent = '.';\r\n\r\n  const sek = document.createElement('p');\r\n  sek.classList.add('timer__count', 'timer__count_sek');\r\n  sek.textContent = '00';\r\n\r\n  const attempts = document.createElement('div');\r\n  attempts.classList.add('attempts');\r\n\r\n  const attempt1 = document.createElement('div');\r\n  attempt1.classList.add('attempt');\r\n  const attempt2 = document.createElement('div');\r\n  attempt2.classList.add('attempt');\r\n  const attempt3 = document.createElement('div');\r\n  attempt3.classList.add('attempt');\r\n\r\n  const buttonRepeat = document.createElement('button');\r\n  buttonRepeat.classList.add('button');\r\n  buttonRepeat.textContent = 'Начать заново';\r\n\r\n  const cardsContainer = document.createElement('div');\r\n  cardsContainer.classList.add('cards-container-baby');\r\n\r\n  container.appendChild(header);\r\n  header.appendChild(timer);\r\n  timer.appendChild(minText);\r\n  timer.appendChild(sekText);\r\n  timer.appendChild(min);\r\n  timer.appendChild(dot);\r\n  timer.appendChild(sek);\r\n\r\n  header.appendChild(buttonRepeat);\r\n  container.appendChild(cardsContainer);\r\n\r\n  generateCardsBaby(cardsContainer); // Вывод картинок на экран\r\n\r\n  showDataBaby();\r\n\r\n  buttonRepeat.addEventListener('click', () => {\r\n    container.innerHTML = '';\r\n    generateStartScreen(container);\r\n  });\r\n}\r\n\r\n/**\r\n * Генерация и вывод картинок на экран\r\n */\r\n\r\nfunction generateCardsBaby(container: HTMLDivElement): void {\r\n  const cardsContainer = document.querySelector(\r\n    '.cards-container-baby'\r\n  ) as HTMLDivElement;\r\n  cardsContainer.classList.add(`cards-container-baby_${window.app.level}`);\r\n\r\n  const numberOfCardsInRow = Number(window.app.level) + 1;\r\n  const numberOfCardsInColumn = 2;\r\n  const numberOfCards = numberOfCardsInRow * numberOfCardsInColumn;\r\n\r\n  const cardWidth = 150;\r\n  const gap = 15;\r\n\r\n  if (window.app.level === '1') {\r\n    const timer = document.querySelector('.timer') as HTMLDivElement;\r\n    timer.style.marginRight = '70px';\r\n  }\r\n\r\n  for (let i = 0; i < numberOfCards; i++) {\r\n    const card = document.createElement('div');\r\n    card.classList.add('card', 'card_baby');\r\n    card.style.background = '#dddddd';\r\n    container.appendChild(card);\r\n  }\r\n\r\n  container.style.width =\r\n    numberOfCardsInRow * cardWidth + (numberOfCardsInRow - 1) * gap + 'px';\r\n  container.style.height =\r\n    numberOfCardsInColumn * cardWidth +\r\n    (numberOfCardsInColumn - 1) * gap +\r\n    'px';\r\n}\r\n","import { doubleArr, shuffle } from './utils/arr-utils';\r\nimport { increaseTime } from './stopwatch';\r\nimport { hideCardsBaby } from './hide-card';\r\nimport { showCardBaby } from './show-card-baby';\r\n\r\n/***\r\n *\r\n */\r\n\r\nexport function showDataBaby(): void {\r\n  const data = ['#d92519', '#fff500', '#194888', '#02913f'];\r\n  const shuffledData = shuffle(data);\r\n  const randomCards = shuffledData.splice(0, Number(window.app.level) + 1);\r\n\r\n  window.app.cardsForCurrentGame = shuffle(doubleArr(randomCards));\r\n\r\n  generateCardsContentBaby();\r\n\r\n  window.app.stopwatch = window.setInterval(increaseTime, 1000); // запуск секундомера\r\n\r\n  window.app.delay = window.setTimeout(\r\n    hideCardsBaby,\r\n    window.app.cardDisplayTime\r\n  ); // время показа карт 5s\r\n\r\n  showCardBaby();\r\n}\r\n\r\n/**\r\n * Заполнение n карт данными из массива data = shuffle(doubleCards)\r\n */\r\n\r\nfunction generateCardsContentBaby(): void {\r\n  let imgs = document.querySelectorAll<HTMLDivElement>('.card');\r\n\r\n  for (let i = 0; i < imgs.length; i++) {\r\n    imgs[i].style.background = `${window.app.cardsForCurrentGame[i]}`;\r\n    imgs[i].style.border = '10px solid #ffffff';\r\n    imgs[i].style.transform = 'rotateY(-180deg) scale(-1, 1)';\r\n  }\r\n}\r\n","import { hideCardsBaby } from './hide-card';\r\nimport { generateWinScreen } from './generate-win-screen';\r\n\r\n/**\r\n * Открываем карту по клику\r\n */\r\n\r\ntype cardObj = {\r\n  name: string;\r\n  text: string;\r\n  img: string;\r\n  suit: string;\r\n};\r\n\r\nfunction isStringArray(arg: (cardObj | string)[]): arg is string[] {\r\n  return typeof arg === 'object';\r\n}\r\n\r\nexport function showCardBaby() {\r\n  const imgs = document.querySelectorAll<HTMLDivElement>('.card');\r\n  const cardsForCurrentGame = window.app.cardsForCurrentGame;\r\n\r\n  if (isStringArray(cardsForCurrentGame)) {\r\n    for (let i = 0; i < imgs.length; i++) {\r\n      imgs[i].addEventListener('click', () => {\r\n        imgs[i].style.transform = 'rotateY(180deg) scale(-1, 1)';\r\n        imgs[i].style.background = `${cardsForCurrentGame[i]}`;\r\n        imgs[i].style.border = '10px solid #ffffff';\r\n\r\n        // добавляем пару выбранных карт в window.app.userCards\r\n        if (!window.app.userCards[0] && !window.app.userTargets.includes(i)) {\r\n          window.app.userCards[0] = cardsForCurrentGame[i];\r\n          window.app.userTargets.push(i);\r\n        }\r\n\r\n        if (window.app.userCards[0] && !window.app.userTargets.includes(i)) {\r\n          window.app.userCards[1] = cardsForCurrentGame[i];\r\n          window.app.userTargets.push(i);\r\n\r\n          //если карты не совпадают, обнуляем все результаты\r\n          if (window.app.userCards[0] !== window.app.userCards[1]) {\r\n            window.app.userCards = [];\r\n            window.app.userTargets = [];\r\n            window.app.guessedPairs = [];\r\n\r\n            setTimeout(hideCardsBaby, window.app.commonDelay);\r\n          }\r\n\r\n          //если карты совпадают, добавляем в список угаданных пар\r\n          if (\r\n            window.app.userCards.length > 0 &&\r\n            window.app.userCards[0] === window.app.userCards[1]\r\n          ) {\r\n            if (!window.app.guessedPairs.includes(window.app.userCards[0])) {\r\n              window.app.guessedPairs.push(window.app.userCards[0]);\r\n            }\r\n\r\n            window.app.userCards = [];\r\n\r\n            if (\r\n              window.app.guessedPairs.length ===\r\n              Number(window.app.level) + 1\r\n            ) {\r\n              clearInterval(window.app.stopwatch);\r\n\r\n              setTimeout(generateWinScreen, window.app.commonDelay);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { generateGameScreen } from './generate-game-screen';\r\nimport { generateGameScreenChild } from './generate-game-screen-child';\r\nimport { generateGameScreenBaby } from './generate-game-screen-baby';\r\nimport { generateHelloScreen } from './generate-hello-screen';\r\n\r\n/**\r\n * Генерация начального экрана\r\n */\r\n\r\nexport function generateStartScreen(container: HTMLDivElement): void {\r\n  window.app.userTimeSekMin = [0, 0];\r\n  window.app.guessedPairs = [];\r\n  window.app.userCards = [];\r\n  window.app.userTargets = [];\r\n  window.app.attempts = 0;\r\n\r\n  clearTimeout(window.app.delay);\r\n  clearInterval(window.app.stopwatch);\r\n\r\n  container.innerHTML = '';\r\n\r\n  const formStart = document.createElement('form');\r\n  formStart.classList.add('form', 'form__start');\r\n\r\n  const h2Title = document.createElement('h2');\r\n  h2Title.classList.add('h2-title');\r\n  h2Title.textContent = 'Выберите сложность';\r\n\r\n  const difficulty = document.createElement('div');\r\n  difficulty.classList.add('difficulty');\r\n\r\n  container.appendChild(formStart);\r\n  formStart.appendChild(h2Title);\r\n  formStart.appendChild(difficulty);\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    const difficultyLevel = document.createElement('input');\r\n    difficultyLevel.classList.add('difficulty__level', 'radio');\r\n    difficultyLevel.type = 'radio';\r\n    difficultyLevel.id = `level${i + 1}`;\r\n    difficultyLevel.name = 'difficulty';\r\n    difficultyLevel.value = `${i + 1}`;\r\n\r\n    const label = document.createElement('label');\r\n    label.classList.add('difficulty__level_label', 'label');\r\n    label.setAttribute('for', `level${i + 1}`);\r\n    label.textContent = `${i + 1}`;\r\n\r\n    difficulty.appendChild(difficultyLevel);\r\n    difficulty.appendChild(label);\r\n  }\r\n\r\n  const buttonsContainer = document.createElement('div');\r\n  buttonsContainer.classList.add('buttons-container');\r\n  formStart.appendChild(buttonsContainer);\r\n\r\n  const buttonStart = document.createElement('button');\r\n  buttonStart.classList.add('difficulty__button', 'button');\r\n  buttonStart.type = 'submit';\r\n  buttonStart.textContent = 'Старт';\r\n\r\n  buttonsContainer.appendChild(buttonStart);\r\n\r\n  const buttonChangeAge = document.createElement('button');\r\n  buttonChangeAge.classList.add(\r\n    'difficulty__button',\r\n    'difficulty__button_change-age',\r\n    'button'\r\n  );\r\n  buttonChangeAge.type = 'button';\r\n  buttonChangeAge.textContent = 'На главную';\r\n\r\n  buttonsContainer.appendChild(buttonChangeAge);\r\n\r\n  const difficultyLevels =\r\n    document.querySelectorAll<HTMLInputElement>('.difficulty__level');\r\n  const difficultyLevelLabels = document.querySelectorAll<HTMLLabelElement>(\r\n    '.difficulty__level_label'\r\n  );\r\n\r\n  /**\r\n   * Смена цвета выбранного уровня сложности\r\n   */\r\n\r\n  difficultyLevels.forEach((difficultyLevel) => {\r\n    difficultyLevel.addEventListener('click', () => {\r\n      buttonStart.textContent = 'Старт';\r\n      buttonStart.style.background = '#7ac100';\r\n\r\n      difficultyLevelLabels.forEach((label) => {\r\n        label.style.background = '#ffffff';\r\n        label.style.color = '#0080c1';\r\n      });\r\n\r\n      difficultyLevelLabels[\r\n        Number(difficultyLevel.value) - 1\r\n      ].style.background = '#0080c1';\r\n      difficultyLevelLabels[Number(difficultyLevel.value) - 1].style.color =\r\n        '#ffffff';\r\n    });\r\n  });\r\n\r\n  formStart.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let i = 0; i < difficultyLevels.length; i++) {\r\n      if (difficultyLevels[i].checked) {\r\n        window.app.level = difficultyLevels[i].value;\r\n\r\n        if (Number(window.app.age) === 0) {\r\n          generateGameScreenBaby(container);\r\n        }\r\n\r\n        if (Number(window.app.age) === 1) {\r\n          generateGameScreenChild(container);\r\n        }\r\n\r\n        if (Number(window.app.age) === 2) {\r\n          generateGameScreen(container);\r\n        }\r\n\r\n        break;\r\n      } else {\r\n        buttonStart.textContent = 'Выберите уровень!';\r\n        buttonStart.style.background = '#c14a00';\r\n      }\r\n    }\r\n  });\r\n\r\n  buttonChangeAge.addEventListener('click', () => {\r\n    generateHelloScreen(container);\r\n  });\r\n}\r\n","import { generateStartScreen } from './generate-start-screen';\r\n\r\n/**\r\n * Генерация приветственного экрана\r\n */\r\n\r\nexport function generateHelloScreen(container: HTMLDivElement): void {\r\n  window.app.userTimeSekMin = [0, 0];\r\n  window.app.guessedPairs = [];\r\n  window.app.userCards = [];\r\n  window.app.userTargets = [];\r\n  window.app.attempts = 0;\r\n\r\n  clearTimeout(window.app.delay);\r\n  clearInterval(window.app.stopwatch);\r\n\r\n  container.innerHTML = '';\r\n\r\n  const formHello = document.createElement('form');\r\n  formHello.classList.add('form', 'form__hello');\r\n\r\n  const h2Title = document.createElement('h2');\r\n  h2Title.classList.add('h2-title');\r\n  h2Title.textContent = 'Ваш возраст?';\r\n\r\n  const age = document.createElement('div');\r\n  age.classList.add('age');\r\n\r\n  container.appendChild(formHello);\r\n  formHello.appendChild(h2Title);\r\n  formHello.appendChild(age);\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    const userAge = document.createElement('input');\r\n    userAge.classList.add('user__age', 'radio');\r\n    userAge.type = 'radio';\r\n    userAge.id = `userAge${i}`;\r\n    userAge.name = 'userAge';\r\n    userAge.value = `${i}`;\r\n\r\n    const label = document.createElement('label');\r\n    label.classList.add('user__age_label', 'label');\r\n    label.setAttribute('for', `userAge${i}`);\r\n\r\n    age.appendChild(userAge);\r\n    age.appendChild(label);\r\n  }\r\n\r\n  const labels =\r\n    document.querySelectorAll<HTMLLabelElement>('.user__age_label');\r\n  labels[0].innerHTML = '0+';\r\n  labels[1].textContent = '3+';\r\n  labels[2].textContent = '7+';\r\n\r\n  const buttonStart = document.createElement('button');\r\n  buttonStart.classList.add('age__button', 'button');\r\n  buttonStart.textContent = 'Играть';\r\n\r\n  formHello.appendChild(buttonStart);\r\n\r\n  const userAges = document.querySelectorAll<HTMLInputElement>('.user__age');\r\n  const difficultyLevelLabels =\r\n    document.querySelectorAll<HTMLLabelElement>('.user__age_label');\r\n\r\n  /**\r\n   * Смена цвета выбранного уровня сложности\r\n   */\r\n\r\n  userAges.forEach((userAge) => {\r\n    userAge.addEventListener('click', () => {\r\n      buttonStart.textContent = 'Играть';\r\n      buttonStart.style.background = '#7ac100';\r\n\r\n      difficultyLevelLabels.forEach((label) => {\r\n        label.style.background = '#ffffff';\r\n        label.style.color = '#0080c1';\r\n      });\r\n\r\n      difficultyLevelLabels[Number(userAge.value)].style.background = '#0080c1';\r\n      difficultyLevelLabels[Number(userAge.value)].style.color = '#ffffff';\r\n    });\r\n  });\r\n\r\n  formHello.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let i = 0; i < userAges.length; i++) {\r\n      if (userAges[i].checked) {\r\n        window.app.age = userAges[i].value;\r\n\r\n        generateStartScreen(container);\r\n\r\n        break;\r\n      } else {\r\n        buttonStart.textContent = 'Вы не выбрали возраст!';\r\n        buttonStart.style.background = '#c14a00';\r\n      }\r\n    }\r\n  });\r\n}\r\n","import '../style.scss';\r\nimport { generateHelloScreen } from './generate-hello-screen';\r\n\r\ntype cardObj = {\r\n  name: string;\r\n  text: string;\r\n  img: string;\r\n  suit: string;\r\n};\r\n\r\ntype gameApp = {\r\n  userTimeSekMin: number[];\r\n  cardsForCurrentGame: (cardObj | string)[];\r\n  userCards: string[];\r\n  userTargets: number[];\r\n  guessedPairs: string[];\r\n  attempts: number;\r\n  commonDelay: number;\r\n  cardDisplayTime: number;\r\n  cardDisplayTimeDelay: number;\r\n  level?: string;\r\n  delay?: number;\r\n  stopwatch?: number;\r\n  age?: string;\r\n};\r\n\r\ndeclare global {\r\n  interface Window {\r\n    app: gameApp;\r\n  }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  window.app = {\r\n    userTimeSekMin: [0, 0],\r\n    cardsForCurrentGame: [],\r\n    userCards: [],\r\n    userTargets: [],\r\n    guessedPairs: [],\r\n    attempts: 0,\r\n    commonDelay: 400,\r\n    cardDisplayTime: 5000,\r\n    cardDisplayTimeDelay: 1000,\r\n  };\r\n\r\n  const screenContainer = document.querySelector(\r\n    '.screen-container'\r\n  ) as HTMLDivElement;\r\n  generateHelloScreen(screenContainer);\r\n});\r\n"],"names":["doubleArr","a","concat","shuffle","array","i","length","j","Math","floor","random","increaseTime","window","app","userTimeSekMin","countSek","document","querySelector","countMin","textContent","toString","hideCards","imgs","querySelectorAll","innerHTML","style","transform","setAttribute","cursor","hideCardsChild","hideCardsBaby","background","cardTemplate","data","text","suit","name","generateWinScreen","shadow","createElement","classList","add","formWin","imgWin","src","h2Title","min","sek","time","buttonRepeat","screenContainer","appendChild","addEventListener","event","preventDefault","generateStartScreen","generateLoseScreen","formLose","imgLose","showData","randomCards","slice","splice","Number","level","cardsForCurrentGame","generateCardsContent","stopwatch","setInterval","delay","setTimeout","cardDisplayTime","cardDisplayTimeDelay","userCards","userTargets","includes","push","guessedPairs","attempts","commonDelay","clearInterval","showCard","generateGameScreen","container","clearTimeout","header","timer","minText","sekText","dot","attempt1","attempt2","attempt3","cardsContainer","width","numberOfCardsInRow","height","card","generateCards","generateGameScreenChild","cardWidth","numberOfCardsInColumn","generateCardsChild","img","generateCardsContentChild","showCardChild","generateGameScreenBaby","numberOfCards","marginRight","generateCardsBaby","border","generateCardsContentBaby","showCardBaby","formStart","difficulty","difficultyLevel","type","id","value","label","buttonsContainer","buttonStart","buttonChangeAge","difficultyLevels","difficultyLevelLabels","forEach","color","checked","age","generateHelloScreen","formHello","userAge","labels","userAges"],"sourceRoot":""}